U članku se daje kratak osvrt na povijest teorije grafova i u tom kontekstu govori o rješavanju Problema kineskog poštara kao jednog o najpoznatijih problema kombinatorne optimizacije.
1 Što bilježe kroničari
Teorija grafova ima dosta precizne povijesne odrednice. Prvi rad iz teorije grafova je Eulerovo 1 rješenje pitanja šetnje koenigsberškim mostovima, objavljen 1736. godine, [ 5 ]. Prvu knjigu iz teorije grafova [ 8 ] napisao je 200 godina poslije D. Koenig 2, što se smatra početkom razvoja teorije grafova kao zasebne matematičke discipline. Koenig je dotadašnje rezultate objedinio i sistematizirao, navodeći popis od svega 110 objavljenih radova u kojima se eksplicitno pojavljuje pojam grafa. Među njihovom autorima su slavna imena poput G. Kirhhoff, A. Cayley i C. Kuratowsky. Od tada graf postaje općenito prihvaćen pojam. Sljedećih tridesetak godina jezikom grafova su postavljani i rješavani brojni zanimljivi problemi o čemu primjerice svjedoči popis od 1617 referencija iz teorije grafova objavljen u [ 14 ] 1964. godine.
U 60 - tim godinama dvadesetog stoljeća počinje snažan razvoj istraživanja u teoriji grafova i njenim primjenama koji traje do danas. U razdoblju od 1960. do 1970. broj godišnje objavljenih radova se više nego udeseterostručio. Danas imamo na desetke uglednih časopisa koji gotovo isključivo objavljuju članke iz teorije grafova i njenih primjena. Neobično intenzivan razvoj i veliku popularnost teorija grafova je doživjela zahvaljujući, izravno ili neizravno, naglom razvoju modernih informacijskih tehnologija. Jasna geometrijska predodžba koju graf sadržiava i koja je bliska intuitivnom poimanju osobina i veza objekata predstavljenih grafom pridonijela je širokom spektru primjene grafova. S druge strane, grafovi postaju univerzalni matematički jezik kojim je moguće opisati najrazličitije, i sasvim apstraktne matematičke strukture.
Građani Koenigsberga (tada glavni grad pruskog kraljevstva, a poslije Kalinjingrad u Rusiji) zabavljali su se starim pitanjem mogu li prošetati svojim gradom tako da svaki od 7 mostova na rijeci Pregel pređu točno jedanput i završe šetnju u polaznoj točki, Slika 1. Leonhard Euler riješio je taj problem kao usputni zadatak na početku karijere vodećeg matematičara Ruske carske akademije u Petrogradu, gdje je 1733. godine dobio posao. Odgovor je bio nedvosmislen: takva šetnja nije moguća ako svaki dio kopna nije s ostalima povezan parnim brojem mostova. Matematički oblik te tvrdnje iskazan je Teoremom 2. Shematski prikaz na Slici 2, na kojem su dijelovi kopna (obale B i C i otoci A i D) predstavljeni točkama a mostovi njihovim spojnicama, prototip je modela koji će odrediti definiciju pojma grafa.
Slika 2: Shematski prikaz
Početkom 60 - tih godina dvadesetog stoljeća kineski matematičar M. Guan (Meigu Guan ili Mei-Ko Kwan) postavlja i proučava pitanje optimizacije poštarova puta pri dostavi pošiljki, [ 7 ]. Poštar kreće iz poštanskog ureda, dijeli poštu i vraća se u ured. Poštarov cilj je svakom ulicom proći barem jedanput i pri tome prijeći najkraći mogući put. U slučaju koenigsberških mostova analogan zadatak bi bio: prošetati gradom i vratiti se u polaznu točku prelazeći svaki most najmanje jedanput uz minimalan broj ponovljenih prelazaka. Guanovo pitanje doživjet će brojne modifikacije i imati raznovrsne primjene. Taj tip problema njemu u čast nazvan je Problem kineskog poštara, skraćeno CPP (engl. Chinese Postman Problem). Pod tim imenom je poznat kao jedan od najpopularnijih problema kombinatorne optimizacije. Optimizacijske probleme i kombinatorne probleme općenito relativno je lako formulirati, ali je njihovo rješavanje rijetko kada jednostavno. Za sustavno traženje rješenja potrebno je pronaći primjerene matematičke modele i metode. O matematičkim modelima motiviranima rješavanjem spomenutih problema govorimo u nastavku.
2 Malo o grafovima
Definicija 1. Graf je uređena trojka G = (V, E, \ varphi), gdje je V = V \ left (G \ right) neprazan skup čije elemente nazivamo vrhovima, E = E \ left (G \ right) je skup disjunktan s V čije elemente nazivamo bridovima i \ varphi je funkcija koja svakom bridu e iz E pridružuje par \ left \ lbrace u, v \ right \ rbrace, ne nužno različitih vrhova iz V. Graf skraćeno označavamo G = (V, E) ili samo G.
Vrhove u i v koji su pridruženi bridu e nazivamo krajevima brida e. Brid čiji se krajevi podudaraju nazivamo petljom. Višestruki bridovi su dva ili više njih s istim parom krajeva. Za par vrhova u i v kažemo da su susjedni ako postoji brid e kojemu su oni krajevi. Pri tome kažemo da je brid e incidentan s vrhovima u i v, za što ćemo upotrijebiti oznaku e = \ left \ lbrace u, v \ right \ rbrace ili e = uv. Stupanj vrha v u grafu G je broj bridova grafa G incidentnih s v, pri čemu se svaka petlja računa kao dva brida. Izolirani vrh je vrh stupnja 0.
Šetnja u grafu G je niz W: = v_ 0 e_ 1 v_ 1 e_ 2... e_ k v_ k čiji članovi su naizmjenično vrhovi v_ i i bridovi e_ i, tako da su krajevi od e_ i vrhovi v_ i-1 i v_ i, i = 1, \ ldots, k. Kažemo da je v_ 0 početak a v_ k kraj šetnje W, da je W šetnja od v_ 0 do v_ k ili \ left (v_ 0, v_ k \ right) - šetnja. Šetnja se, kada to ne umanjuje jasnoću, skraćeno zapisuje samo bridovima W = e_ 1 e_ 2... e_ k. Šetnja je zatvorena ako se početak i kraj podudaraju, tj. ako je v_ 0 = v_ k. Šetnju kojoj su svi bridovi međusobno različiti nazivamo stazom. Put je staza čiji su vrhovi međusobno različiti. Dva vrha u i v grafa G su povezana ako postoji \ left (u, v \ right) - put u G. Graf je povezan ako su svaka dva njegova vrha povezana.
Odgovor na pitanje koji graf ima Eulerovu turu ili Eulerovu stazu daje sljedeći karakterizacijski teorem.
Teorem 2. Povezani graf je Eulerov ako i samo ako mu je svaki vrh parnog stupnja. Povezani graf koji nije Eulerov sadržava Eulerovu stazu ako i samo ako ima točno dva vrha neparnog stupnja.
Graf sa Slike 2, koji predstavlja koenigsberške mostove, ima sva četiri vrha neparnog stupjna. Na temelju Teorema 2 možemo ustvrditi da taj graf ne sadržava Eulerovu turu, ali ni Eulerovu stazu. Dakle, šetnja gradom koja prolazi svakim mostom točno jedanput nije moguća.
Rješavajući probleme " obilazaka gradskih ulica " nerijetko treba uzeti u obzir dodatni parametrar kao što je " dopušteni smjer ". Traženje matematičkog modela za slične probleme prirodno vodi pojmu usmjerenog grafa.
Definicija 3. Digraf ili usmjereni graf D je uređena trojka D = \ left (V, A, \ psi \ right), gdje je V = V \ left (D \ right) neprazan skup čije elemente nazivamo vrhovima, A = A \ left (D \ right) skup disjunktan s V čije elemente nazivamo lukovima i \ psi funkcija koja svakom luku a iz A pridružuje uređeni par (u, v), pri čemu u, v \ in V nisu nužno različiti. Kažemo da je u početak, a v kraj luka a, da je smjer ili orijentacija luka a od u prema v i koristimo oznaku a = (u, v). Digraf skraćeno označavamo D \ left (V, A \ right) ili samo D.
Pojmove koje smo imali kod grafova analogno definiramo za digrafove. Dva ili više lukova s istim početkom i krajem su višestruki lukovi. Usmjerena šetnja u digrafu D je niz W: = v_ 0 e_ 1 v_ 1 e_ 2... e_ k v_ k čiji članovi su naizmjenično vrhovi v_ i i lukovi e_ i tako da je početak od e_ i vrh v_ i-1, a kraj mu je v_ i, i = 1, \ ldots, k. Kažemo da je v_ 0 početak, a v_ k kraj usmjerene šetnje W ili da je W \ left (v_ 0, v_ k \ right) usmjerena šetnja. Usmjerena šetnja je zatvorena ako je v_ 0 = v_ k. Usmjerenu šetnju kojoj su svi lukovi međusobno različiti nazivamo usmjerenom stazom. Usmjereni put je usmjerena staza čiji su vrhovi međusobno različiti. Usmjerena Eulerova tura je usmjerena zatvorena staza koja svaki luk digrafa sadržava točno jedanput. Eulerov digraf je onaj koji ima Eulerovu turu.
Pripadajući graf G \ left (D \ right) digrafa D je graf dobiven zamjenom svakog luka a = \ left (u, v \ right) bridom e = \ left \ lbrace u, v \ right \ rbrace. Digraf D je slabo povezan (kraće povezan) ako je pripadajući graf povezan, a jako povezan ako za svaka dva vrha u, v \ in V \ left (D \ right) postoje \ left (u, v \ right) i \ left (v, u \ right) usmjereni putovi. Ulazni (izlazni) stupanj vrha v digrafa je broj lukova kojima je v kraj (početak).
Teorem 4. Povezani digraf je Eulerov ako i samo ako je za svaki njegov vrh ulazni stupanj jednak izlaznom.
Smjer luka na skicama označavamo strelicom koja pokazuje od početka prema kraju luka. Jedan digraf prikazan je na Slici 4. Vidimo da taj digraf nije Eulerov jer ne zadovoljava uvjet o stupnjevima iz Teorema 4. Ako mu dodamo jedan luk \ left (v, w \ right) i jedan luk \ left (z, y \ right), novi digraf će biti Eulerov.
Opširnije o spomenutim pojmovima i tvrdnjama može se naći u brojnim knjigama iz teorije grafova kao što su [ 6 ] ili [ 16 ].
3 Traženje rješenja za CPP
Slika 3: Poštarova tura
Vratimo se Problemu kineskog poštara na primjeru grafa za koenigsberške mostove, Slika 3. Pretpostavimo da je svaki brid u grafu ulica u kojoj treba isporučiti poštu, a vrh je mjesto gdje poštar može promijeniti smjer. Poštar mora proći svakom ulicom da bi isporučio poštu i želi minimizirati broj ponovnih prolazaka istom ulicom, koji se ne mogu izbjeći jer graf nije Eulerov. Ponovni prolazak istom ulicom prikazujemo na grafu kao dodani (ponovljeni) brid. Nastali višestruki bridovi omogućuju da svaki vrh novog grafa bude parnog stupnja, odnosno dodavanjem bridova je izvršena " eulerizacija " grafa. U modificiranom grafu može se odrediti Eulerova tura. Na primjer, traženi poštarov obilazak za Eulerov graf sa Slike 3 može biti a b c b e f g d d. U njemu se ponavljaju samo bridovi b i d.
Pri traženju najkraćeg poštarovog obilaska gradskih ulica treba uzeti u obzir parametre kao što su duljine ulica ili vrijeme potrebno za prolazak tim ulicama. Matematički model za ovaj i slične probleme je težinski graf.
Dakle, osnovnmi oblik CPP-a svodi sena traženje optimalne poštarove ture u težinskom grafu. Ako je graf Eulerov, svaka Eulerova tura je optimalna poštarova tura pa je njenim pronalaskom problem riješen. Navest ćemo dva standardna algoritma za pronalaženje Eulerove ture, Fleuryjev i Hierholzerov. Pri tome ćemo se koristiti nekim pojmovima i oznakama iz teorije grafova koje do sada nismo spomenuli pa ih ovdje uvodimo.
Ako su G i H grafovi, V \ left (H \ right) \ subseteq V \ left (G \ right), E \ left (H \ right) \ subseteq E \ left (G \ right) i svaki brid iz H ima iste krajeve u H kao što ih ima u G, onda kažemo da je H podgraf od G. Neka je G = \ left (V, E \ right) i E ^ \ prime \ subseteq E. Podgraf od G čiji je skup vrhova V i skup bridova E \ setminus E ^ \ prime označavamo G-E. Ako je E ^ \ prime = \ left \ lbrace e \ right \ rbrace, koristimo oznaku G-e. Komponenta povezanosti grafa G je maksimalni povezani podgraf od G, tj. povezani podgraf koji nije sadržan ni u jednom drugom povezanom podgrafu. Za broj komponenti povezanosti grafa G koristimo se oznakom c \ left (G \ right). Rezni brid u grafu G je brid e \ in E \ left (G \ right) za koji je c \ left (G-e \ right) \ gt c \ left (G \ right), tj. čijim se izostavljanjem povećava broj komponenti povezanosti.
Korak 2: Označiti proizvoljni brid e koji je incidentan s tekućim vrhom i nije rezni brid te ga dodati stazi C. Samo ako nema drugih mogućnosti, za e uzeti rezni brid. Postaviti za tekući vrh drugi kraj brida e.
Korak 3: Izbrisati označeni brid iz G. Ako nema preostalih bridova: KRAJ; u suprotnom: povratak na Korak 2.
Hierholzerov algoritam traži Eulerovu turu u Eulerovom grafu bez provjere je li brid kojim prolazi rezni. Ovaj algoritam konstruira u grafu sukcesivno zatvorene staze čijim se spajanjem u konačnici dobije Eulerova tura.
Korak 4: Spajanjem staza C_ i i C_ i ^ \ ast konstruirati zatvorenu stazu C_ i 1 s početkom u vrhu v_ i-1 \ in C_ i; ići stazom C_ i do v_ i \ in C_ i, zatim preko svih bridova u C_ i ^ \ ast i potom svih preostalih bridova u C_ i. Postaviti i: = i 1 i ići na Korak 3.
Ako graf nije Eulerov, dodavanjem ponovljenih bridova može se prevesti u graf koji ima Eulerovu turu, što je bila Guanova polazna ideja, [ 7 ]. Ta procedura provodi se takozvanim CPP algoritmom.
Sada, koristeći se Fleuryjevim algoritmom možemo naći Eulerovu turu u grafu. Polaskom iz vrha a imamo Eulerovu turu a-b-c-g-d-e-f-g-e-g-b-a-f-a. Budući da je to optimalna poštarova tura, dobili smo traženo rješenje.
4 Varijacije problema
Kao što je rečeno, osnovni oblik CPP-a svodi se na traženje optimalne poštarove ture u težinskom grafu. Pokazalo se da uz određene modifikacije ovaj model može postati način rješavanja velikog broja vrlo različitih optimizacijskih problema, o čemu govore brojne publikacije. Spomenut ćemo za ilustraciju [ 4 ], [ 9 ], [ 11 ] i [ 12 ].
Primjer 7. Poznati primjer primjene CPP-a je optimizacija rute za čišćenje ulica grada New Yorka, [ 2, 3 ]. Pretpostavimo da usmjereni graf na Slici 4 predstavlja mrežu jednosmjernih ulica. Težine lukova znače vrijeme potrebno za prolazak ulicom bez čišćenja. Lukovi su bojenjem podijeljeni u dvije klase; jedna boja (crvena) označava ulice koje treba očistiti, a druga ulice koje se mogu koristiti za prolazak. Zadatak je odrediti koja ruta minimizira ukupno vrijeme potrebno za čišćenje zadanih ulica, na način da se krene iz vrha z i završi u vrhu z.
Slika 4: Usmjereni graf
Za primjer smo mogli uzeti slučaj u kojemu se pojavljuju i jednosmjerne i dvosmjerne ulice. To upućuje na model koji će istovremeno imati bridove i lukove.
Definicija 8. Mješoviti graf je uređena trojka M = \ left (V, E, A \ right), gdje je V skup vrhova, E skup bridova i A skup lukova.
S vremenom su, kroz primjene, nastale brojne verzije CPP-a vezane uz različite optimizacijske probleme. Glavne verzije su određene tipom modela. Neusmjereni CPP (UCPP - Undirected Chinese Postman Problem) za model ima težinski graf, usmjereni CPP (DCPP - Directed Chinese Postman Problem) modelira se u digraf, kao u Primjeru 7, a mješoviti CPP (MCPP - Mixed Chinese Postman Problem) za rješavanje upotrebljava mješoviti graf. Za svaku od ovih verzija postoje razne varijacije. Navodimo neke od njih, [ 9 ].
Problem ruralnog poštara (CRPP - Rural Postman Problem) je varijacija UCPP-a u kojoj se razmatra povezani težinski graf G = \ left (V, E \ right) s podskupom E ^ \ prime \ subseteq E istaknutih bridova. Cilj je pronaći zatvorenu šetnju u G najmanje težine koja svaki brid e \ in E ^ \ prime prijeđe barem jednom. Ime problema dolazi iz prakse dostave pošte u ruralnim sredinama gdje postoje ulice u kojima nijedan stanovnik tog dana nema pošte, ali te ulice ipak mogu služiti kao poveznice među ulicama u koje tog dana treba dostaviti poštu.
Generalizirani CPP (GCPP - Generalized Chinese Postman Problem) modelira se u povezani težinski graf G = \ left (V, E \ right) čiji je skup bridova E podijeljen u podskupove E_ 1,..., E_ k. Potrebno je pronaći zatvorenu šetnju najmanje težine koja sadržava barem jedan brid iz svakog od podskupova E_ 1,..., E_ k.
Min-max k-CPP (MM k-CPP - Min-Max k-Chinese Postman Problem) kao polazište ima povezani težinski graf G = \ left (V, E \ right) s istaknutim vrhom i zadanim brojem k \ gt 1. Promatraju se svi skupovi od k zatvorenih šetnji koje zadovoljavaju uvjete (a) i (b). Među njima treba pronaći skup koji ima minimalnu težinu najteže šetnje.
Hijerarhijski CPP (HCPP - Hierarchical Chinese Postman Problem) razmatra povezan težinski graf G = \ left (V, E \ right) čiji je skup bridova E podijeljen u nekoliko klasa između kojih je uspostavljen odnos prednosti. Ako klasa E_ p ima veću prednost od klase E_ q, onda bridovi iz E_ p moraju biti prijeđeni prije onih iz E_ q. U tom grafu treba pronaći zatvorenu šetnju minimalne težine koja prelazi svaki brid barem jedanput, tako da se poštuje odnos prednosti klasa.
Primjenjivost CPP-a u praksi, uključujući i područja visoko komercijalnih modernih tehnologija, potiče potragu za učinkovitim algoritmima i programskim alatima za njegovo rješavanje [ 1, 4, 10, 15 ]. Usmjereni CPP složeniji je od neusmjerenog, ali u osnovnoj verziji oba spadaju u probleme koji se rješavaju algoritmima polinomijalne složenosti. Mješoviti CPP još je zahtjevniji i pripada klasi NP-teških problema. Složenost i učinkovitost algoritama nova je tema koja izlazi iz okvira ovog rada. Više o njoj može se naći u [ 13 ].
Napomena. Članak je nastao pri izradi završnog preddiplomskog rada Ane Mimice na studiju Matematike PMF-a u Splitu. Mrežne stranice korištene su kao izvornik za slike.
Mnogi se životni problemi mogu modelirati uz pomoć grafova. Graf se sastoji od točaka i njihovih spojnica. Tako točke mogu biti ljudi u određenom društvu, a spojnice parovi prijatelja, ili točke mogu biti električne komponente, a spojnice električna mreža itd.
Grubo govoreći, graf je familija točaka, koje nazivamo vrhovima, zajedno sa spojnicama među njima, koje nazivamo bridovima. Precizna definicija glasi:
Ako su nekom bridu e \ in E pridruženi vrhovi u, v \ in V, kažemo da su u i v krajevi brida e. Kažemo još i da su vrhovi u i v incidentni s bridom e, da su u i v susjedni vrhovi te pišemo e = uv. Bridovi s barem jednim zajedničkim krajem zovu se susjedni bridovi. Brid čiji se krajevi podudaraju zove se petlja, a brid čiji su krajevi različiti pravi brid ili karika. Dva ili više bridova koji imaju isti par krajeva zovu se višestruki bridovi. Graf koji nema petlji i višestrukih bridova nazivamo jednostavnim grafom. Mi ćemo se ovdje baviti samo jednostavnim grafovima i pod pojmom graf podrazumijevati samo takve grafove.
Definicija 2. Šetnja W u grafu G konačan je niz v_ 0 e_ 1 v_ 1 e_ 2 v_ 2... v_ m-1 e_ m v_ m čiji su članovi naizmjence vrhovi i bridovi grafa G sa svojstvom da su krajevi brida e_ i vrhovi v_ i-1 i v_ i, za svaki i = 1,..., m. Za vrh v_ 0 kažemo da je početak, a za vrh v_ m kra j šetnje W.
Primijetimo da je u jednostavnom grafu šetnja potpuno određena nizom svojih vrhova v_ 0 v_ 1 v_ 2... v_ m-1 v_ m.
Definicija 3. Šetnja u kojoj su svi bridovi različiti naziva se staza. Ako su pritom i svi vrhovi, osim eventualno početnog i krajnjeg, različiti, takvu stazu nazivamo put. Za šetnju kažemo da je zatvorena ako je v_ 0 = v_ m, a zatvoreni put nazivamo ciklusom.
Da bismo dobili predodžbu o tome kakvim se problemima bavi teorija sparivanja, počnimo s dva jednostavna primjera koja dobro ilustriraju taj problem.
Primjer 5. Neko poduzeće dalo je oglas za zapošljavanje novih djelatnika na poslove P_ 1, P_ 2, P_ 3, P_ 4 i P_ 5. Na oglas se prijavilo pet kandidata K_ 1, K_ 2, K_ 3, K_ 4 i K_ 5, s tim da je kandidat K_ 1 kvalificiran za poslove P_ 3 i P_ 4, kandidat K_ 2 za posao P_ 3, kandidat K_ 3 za poslove P_ 1, P_ 2 i P_ 3, kandidat K_ 4 za poslove P_ 3 i P_ 4 te kandidat K_ 5 za poslove P_ 2 i P_ 5. Ispitajte je li moguće rasporediti kandidate na poslove tako da se svi poslovi obavljaju i da svaki kandidat obavlja posao za koji je kvalificiran?
Ako izvršitelje i poslove, odnosno djevojke i momke, uzmemo za vrhove grafa, a bridovima spojimo svakog izvršitelja s poslovima koje zna obavljati, odnosno sve djevojke i momke koji se međusobno simpatiziraju, onda naš problem glasi: odredite maksimalan broj bridova od kojih nikoja dva nisu susjedna.
2 Sparivanje u grafovima
Definicija 6. Sparivanje u grafu G = (V, E) je skup bridova M \ subseteq E koji su karike i koji nisu međusobno susjedni. Kažemo da su vrhovi u i v spareni u M ako su u i v krajevi nekog brida iz M.
Ako je E \ neq \ emptyset, onda je svaki jednočlani podskup od E jedan primjer sparivanja u G. No, zanimljivo je naći sparivanje sa što većim brojem bridova. Stoga definiramo:
Definicija 7. Sparivanje M u grafu G je maksimalno sparivanje u G ako ne postoji sparivanje u G s većim brojem bridova od broja bridova u M.
Definicija 8. Kažemo da sparivanje M u grafu G = (V, E) zasićuje vrh v \ in V ili da je vrh v M - zasićen ako je v kraj nekog brida iz M. U protivnom kažemo da je vrh v M - nezasićen. Kažemo da je sparivanje M savršeno sparivanje ako je svaki vrh iz G M - zasićen.
U literaturi se savršeno sparivanje često zove Kekuléova struktura, prema njemačkom kemičaru Augustu Kekuléu (1829. 1896.).
Očito je svako savršeno sparivanje ujedno i maksimalno, dok obrat općenito ne vrijedi. Nadalje, broj bridova u savršenom sparivanju je konstantan i iznosi \ frac \ left \ vert V \ right \ vert 2. Za postojanje savršenog sparivanja nužno je da graf ima paran broj vrhova. No, to je samo nuždan, a ne i dovoljan uvjet za postojanje savršenog sparivanja. Osnovni problem teorije sparivanja jest ispitati postoji li savršeno sparivanje i ako postoji, konstruirati ga. U slučaju da se ne može konstruirati savršeno sparivanje, cilj je konstruirati sva ili bar neka maksimalna sparivanja.
Slika 1: Primjer maksimalnog i savršenog sparivanja
Definicija 9. Za skup vrhova S \ subseteq V grafa G = \ left (V, E \ right) kažemo da je stabilan ako nikoja dva vrha iz S nisu susjedna. Vršni pokrivač K \ subseteq V je skup vrhova grafa G takvih da svaki brid od G ima barem jedan kraj u K. Bridni pokrivač L \ subseteq E je skup bridova grafa G takvih da je svaki vrh grafa G kraj barem jednom bridu iz L.
Označimo s
\ bullet
v (G) = kardinalnost maksimalnog sparivanja u G,
\ bullet
\ alpha (G) = kardinalnost maksimalnog stabilnog skupa u G,
Primijetimo da je \ rho (G) dobro definiran samo za grafove bez izoliranih vrhova.
Neka je K neki vršni pokrivač grafa G, a M neko sparivanje u G. Tada svaki brid iz M ima barem jedan kraj u K, a budući da bridovi iz M nemaju zajedničkih vrhova, to je \ left \ vert M \ right \ vert \ leq \ left \ vert K \ right \ vert. Stoga i za maksimalno sparivanje M ^ \ ast i minimalni vršni pokrivač \ bar K također vrijedi \ left \ vert M ^ \ ast \ right \ vert \ leq \ left \ vert \ bar K \ right \ vert, tj. \ upsilon (G) \ leq \ tau (G).
Teorem 10. Skup S je stabilan ako i samo ako je skup V \ setminus S vršni pokrivač grafa G = (V, E).
Jedan od osnovnih pojmova teorije sparivanja je pojam uvećavajućeg puta.
Definicija 11. Neka je M sparivanje u grafu G = \ left (V, E \ right). M - alternirajući put u G je put čiji su bridovi naizmjenice elementi iz skupova M i E \ setminus M. M - uvećavajući put u G je M - alternirajući put čiji su početak i kraj M - nezasićeni vrhovi.
Teorem 12. [ C. Berge, 1957. ] Sparivanje M u grafu G je maksimalno sparivanje ako i samo ako G ne sadržava M - uvećavajući put.
Ovaj teorem omogućuje nam da provjerimo je li neko sparivanje M u grafu G maksimalno, kako bismo ispitali postoji li ili ne M - uvećavajući put.
2.1 Sparivanje u bipartitnom grafu
Definicija 13. Za graf G kažemo da je bipartitan ili dvodijelan ako se skup njegovih vrhova može podijeliti u dva disjunktna podskupa X i Y tako da svaki brid grafa G ima jedan kraj u X, a drugi u Y. Particija (X, Y) naziva se biparticija grafa G. Bipartitni graf s biparticijom (X, Y) označava se G (X, Y).
Definicija 15. Kažemo da bipartitni graf G (X, Y) ima potpuno sparivanje u X ako postoji sparivanje u G koje zasićuje sve vrhove iz X.
Potpuno sparivanje, dakle, definira jedno 1 - 1 preslikavanje između vrhova iz X i jednog dijela vrhova iz Y koje odgovarajuće vrhove iz X i Y spaja bridom. Stoga za svakih k vrhova iz X mora postojati barem k njima susjednih vrhova u Y. To je, dakle, nuždan uvjet za postojanje potpunog sparivanja. Sljedeći teorem kazuje da je to i dovoljan uvjet.
Teorem 16. [ P. Hall, 1935. ] Bipartitni graf G s biparticijom (X, Y) ima potpuno sparivanje ako i samo ako za svaki S \ subseteq X vrijedi Hallov uvjet:
gdje je N (S) \ subseteq Y skup svih vrhova grafa G koji su susjedni vrhovima iz S.
Ako particije X i Y imaju jednak broj elemenata, onda su potpunim sparivanjem u X zasićeni i svi vrhovi iz Y, pa je riječ o savršenom sparivanju u bipartitnom grafu. O tome govori sljedeći teorem popularno nazvan Teorem o braku.
No, u bipartitnom grafu koji odgovara problemu iz Primjera 4 vrijedi Hallov uvjet za svaki podskup skupa djevojaka, pa stoga postoji savršeno sparivanje u tom grafu, tj. možemo povezati sve parove poštujući navedene simpatije. Naravno, sada se postavlja pitanje kako konstruirati to sparivanje. Sam Hallov uvjet bez dodatnih razmatranja ne bi bio koristan u praksi jer za bipartitni graf G \ left (X, Y \ right) treba ispitati sve podskupove skupa X, a broj podskupova naglo raste kako raste broj vrhova. Tako bi, naprimjer, za graf kojemu je \ left \ vert X \ right \ vert = 50 trebalo ispitati 1125899906842623 različitih podskupova od X.
2.2 Mađarska metoda
Pored samog pitanja egzistencije savršenog sparivanja u bipartitnom grafu, jednako je važno i pitanje njegove konstrukcije u slučaju da takvo sparivanje postoji. Jedna od poznatih metoda koja se bavi pitanjima egzistencije i konstrukcije savršenog sparivanja u bipartitnom grafu je tzv. mađarska metoda. S pomoću nje se ili konstruira savršeno sparivanje u bipartitnom grafu G \ left (X, Y \ right), ili se pronađe podskup S \ subseteq X za koji je \ left \ vert N \ left (S \ right) \ right \ vert \ lt \ left \ vert S \ right \ vert, pa po Hallovu teoremu slijedi da savršeno sparivanje u G \ left (X, Y \ right) ne postoji.
Ideja je sljedeća:
Započnemo s nekim sparivanjem M u bipartitnom grafu G \ left (X, Y \ right), pri čemu za M možemo uzeti i prazan skup ako ne znamo ništa bolje. Ako M zasićuje X, onda je ono i savršeno sparivanje, pa smo gotovi. Ako, pak, postoji M - nezasićen vrh u \ in X, onda algoritam sustavno traži M - uvećavajući put P s početkom u vrhu u. Ako takav put postoji, onda za sparivanje M ^ \ prime = M \ bigtriangleup E \ left (P \ right), gdje je E \ left (P \ right) skup bridova puta P, sadržava više bridova i zasićuje više vrhova u X nego sparivanje M. Tako dobivamo veće sparivanje M ^ \ prime, a potom cijeli postupak ponovimo tako da umjesto polaznog sparivanja M uzmemo sparivanje M ^ \ prime. U slučaju da takav put ne postoji, pronađemo skup R svih vrhova koji su s vrhom u povezani M - alternirajućim putom. Može se pokazati da za skup S = R \ cap X vrijedi \ left \ vert N \ left (S \ right) \ right \ vert \ lt \ left \ vert S \ right \ vert, pa po Hallovu teoremu zaključujemo da ne postoji savršeno sparivanje u bipartitnom grafu G \ left (X, Y \ right), a po Teoremu 12 da je sparivanje M maksimalno sparivanje u G.
Ovaj algoritam dao je J. Edmonds 1965. godine, a zove se mađarska metoda jer se zasniva na idejama dvojice Mađara: Kőniga i Egerváryja.
Primijetimo da nam Mađarska metoda daje samo egzistenciju jednog savršenog sparivanja, no ne kaže nam ništa o broju svih mogućih savršenih sparivanja. U praksi nam može biti od važnosti poznavati njihov broj. O tome više u sljedećem poglavlju.
3 Prebrojavanje Kekuléovih struktura
U daljnjem ćemo tekstu najviše pozornosti posvetiti molekularnim grafovima, pa ćemo se za savršena sparivanja koristiti izraz Kekuléove strukture. Kekuléove strukture igraju posebno važnu ulogu u proučavanju benzenoida. Benzenoidni graf je povezani graf čije se ravninsko smještanje sastoji od kongruentnih pravilnih šesterokuta, tako da svaka dva šesterokuta ili imaju zajednički vrh, ili su disjunktni. U literaturi ih ponekad nazivaju i poliheksi, heksagonalne životinje, heksagonalna poliomina, heksagonalni sustavi i sl. Za benzenoid kažemo da je katakondenziran ako nijedan vrh nije incidentan s tri šesterokuta. Za benzenoid kažemo da je benzenoidni lanac ako je katakondenziran i nijedan šeterokut nema tri susjedna šesterokuta. Prebrojavanje savršenih sparivanja ima važne kemijske primjene. Naime, Linus Pauling (dobitnik dviju Nobelovih nagrada) uočio je da se s pomoću Paulingova reda veze (omjer broja Kekuléovih struktura koje udvostručavaju neku vezu i svih Kekuléovih struktura) može izračunati aproksimacija duljine veze među atomima ugljika u benzenoidnim molekulama.
3.1 Linearne rekurzivne metode
Označimo s G neki molekularni graf, a sa k podgraf koji čini Kekuléovu strukturu, tj. koji se sastoji od nesusjednih bridova grafa G, a svaki vrh grafa G je incidentan s točno jednim bridom u k. Naprimjer, za naftalen se mogu pronaći tri Kekuléove strukture.
Slika 2: Kekuléove strukture naftalena
S K \ left (G \ right) označimo broj svih različitih Kekuléovih struktura u grafu G. Da bismo odredili taj broj poslužit ćemo se linearnim rekurzijama na grafu i njegovim podgrafovima. Od samih početaka pa sve do danas, metode za prebrojavanje Kekuléovih struktura temelje se upravo na takvim rekurzijama.
Neka je e proizvoljan brid grafa G. S G-e označimo graf koji se dobije iz grafa G kada mu uklonimo brid e, a s G \ circleddash e graf koji se dobije iz grafa G uklanjanjem brida e i svih njemu susjednih bridova. Tada vrijedi jednostavna rekurzija
(1)
K (G) = K (G-e) K (G \ circleddash e)
koju je i vrlo lako programirati. Važno je napomenuti da ako se primjenom ove rekurzije na neki izabrani niz bridova grafa G taj graf razbije u nepovezane dijelove, rekurziju tada možemo primijeniti zasebno na svaki njegov pojedini dio. Kod molekularnih grafova pozornost se posvećuje i dobivanju rekurzivne formule za prebrojavanje Kekuléovih struktura u ovisnosti o duljini lanca. Tako Gordonova i Davisonova shema za određivanje broja Kekuléovih struktura u katakondenziranom benzenoidnom lancu ima lagan i praktičan grafički prikaz. Pogledajmo to na sljedećem primjeru. Postupak izgleda ovako:
(1)
U šesterokute grafa koji prikazuje katakondenzirani benzenoidni lanac upisuju se brojevi počevši od jednog kraja i to na način: izvan početnog šesterokuta upiše se broj 1, a u prvi šesterokut upiše se broj 2.
(2)
Svaki broj u ostalim šesterokutima dobije se kao suma onog broja koji je upisan u šesterokut koji je njegov direktni prethodnik (njih dva određuju smjer) i onog koji je upisan u šesterokut neposredno prije skretanja lanca u tom smjeru.
(3)
Broj koji je upisan u zadnji šesterokut lanca upravo je broj Kekuléovih struktura K (G).
U našem primjeru je K (G) = 25.
3.2 Metode transfer matrice
Linearna rekurzija K (G) = K (G-e) K (G \ circleddash e) u slučaju grafova polimera (lanac s mnogo ponavljajućih elemenata ponavljajuće elemente nazivamo monomerima) ima vrlo elegantan oblik bez obzira na to kakvi su polimeri u pitanju. Mi ćemo se ovdje fokusirati na regularne polimere u kojima se ponavlja ista jedinica monomera. Broj Kekuléovih struktura K_ L za ciklički lanac polimera duljine L se može izraziti u obliku
K_ L = tr \ left (\ rho \ cdot T ^ L \ right)
gdje je T transfer matrica karakteristična za jedinicu određenog monomera, a \ rho matrica koja opisuje karakter rubnih uvjeta, npr. krajeva lanca polimera.
Iz matrice T vidljivi su svi različiti načini na koje se Kekuléove strukture mogu načiniti iz jednog uzorka na granici jedne jedinice monomera do drugog uzorka na granici sljedeće jedinice monomera.
S obzirom na vertikalnu os simetrije ovih šesterokuta razlikujemo lijevi i desni monomer. S lijeve i desne strane osi simetrije je neparan broj vrhova šesterokuta (3), pa moramo imati i neparan broj dvostrukih bridova (bridova u sparivanju) koji sijeku os simetrije. Budući da samo dva lijeva brida sijeku os simetrije, točno je jedan od njih dvostruki brid. Sve mogućnosti za postavljanje dvostrukih veza na granici monomera prikazane su na sljedećoj slici.
U slučaju da je gornji lijevi brid koji siječe os simetrije dvostruki brid, postoje dva načina za nastavak na sljedećoj granici, dok se u slučaju donjeg lijevog dvostrukog brida može nastaviti samo na jedan način jer propada mogućnost donja lijeva dvostruka veza \ rightarrow gornja desna dvostruka veza. Naime, ta nas mogućnost dovodi do nezasićenog vrha (vidite donju sliku). Vrhove A i B ne smijemo spojiti dvostrukim bridom jer već imamo jednu dvostruku vezu koja siječe os simetrije, a znamo da može biti samo jedna takva. To znači da vrh B ostaje nezasićen, pa ta mogućnost ne daje savršeno sparivanje.
Za uske lance (široke par šesterokuta) postoji tek nekoliko mogućih uzoraka, tako da je matrica T malog reda, a nakon njene dijagonalizacije lako se izračuna i tražena potencija matrice T za proizvoljnu duljinu lanca L. No, s povećanjem širine trake w, tj. broja veza koje presijecaju os simetrije, eksponencijalno se povećava i red matrice T, ali ova tehnika sigurno je primjenjiva za širine w \ leq 12.
Lijevo od osi simetrije imamo neparan broj vrhova šesterokuta (ima ih 5), pa moramo imati i neparan broj dvostrukih bridova (bridova u sparivanju) koji sijeku os simetrije. Dakle, imamo jedan ili tri dvostruka brida koja sijeku os simetrije. Ispitajmo svaku mogućnost zasebno. Najprije pogledajmo sve mogućnosti u kojima je samo gornji lijevi brid dvostruki:
Očito, sve tri mogućnosti zasićuju sve vrhove, tj. vode do savršenog sparivanja.
Mogućnost srednja lijeva dvostruka veza \ rightarrow gornja desna dvostruka veza nije dobra (slika 3). Naime, ta mogućnost dovodi nas do nezasićenog vrha. Vrh A ne možemo zasititi jer već imamo jednu dvostruku vezu koja siječe simetralu, a znamo da u ovom slučaju može biti samo jedna (situaciju s tri dvostruka brida zasebno ćemo ispitati). To znači da vrh A ostaje nezasićen, pa ta mogućnost ne daje savršeno sparivanje.
Slika 3: nije dobro
Ostale dvije mogućnosti (slika 4) srednja lijeva dvostruka veza \ rightarrow srednja desna dvostruka veza i srednja lijeva dvostruka veza \ rightarrow donja desna dvostruka veza su u redu i dovode nas do savršenog sparivanja.
Slika 4: dobro
Sljedeće mogućnosti počinju s donjim lijevim dvostrukim bridom. U prva dva slučaja (slika 5): donja lijeva dvostruka veza \ rightarrow gornja desna dvostruka veza i donja lijeva dvostruka veza \ rightarrow srednja desna dvostruka veza nije moguće savršeno sparivanje jer dobivamo nezasićene vrhove (vrh A), dok je situacija donja lijeva dvostruka veza \ rightarrow donja desna dvostruka veza u redu.
Slika 5: nije dobro
I napokon, ako su sva tri lijeva brida koja sijeku os simetrije dvostruki bridovi (slika 6), onda sve mogućnosti kad je na desnoj strani samo jedan dvostruki brid ili sva tri, dovode do nezasićenih vrhova početnih i krajnjih šesterokuta.
Problem optimalne zamjene opreme jedan je od osnovnih problema u cjelokupnoj industriji. Sastoji se u određivanju optimalnoga trenutka zamjene stare opreme novom pod uvjetima da se opseg proizvodnje poveća, a troškovi proizvodnje umanje, tako da se time potpuno nadoknade troškovi kupnje nove opreme, gubici uzrokovani zastojem u proizvodnji zbog uvođenja nove opreme i troškovi obuke djelatnika za rad na novoj opremi.
Temeljni zadatak je odrediti optimalnu politiku modernizacije i zamjene opreme prihvaćajući pritom različite uvjete vezane za tekuće održavanje, karakteristike proizvodnje i predviđeni tehnološki razvoj. Ovakav proces očito zahtijeva analizu u više faza, pa se time dinamičko programiranje nameće kao prikladan način rješavanja ovakvih problema.
Neki tipovi problema zamjene opreme i načini njihova rješavanja ilustriraju se na sljedećim primjerima. U rješenjima pojedinih primjera koriste se računalni programi Graph Magics i Grin čije su besplatne probne (trial) verzije dostupne za preuzimanje putem Interneta.
Primjer 1
Utvrđena poslovna politika neke tvrtke predviđa korištenje automobila u sljedećih n = 5 godina, pa je na početku prve godine razdoblja planiranja kupljen novi automobil po nabavnoj cijeni od p = 12 n. j. 1 Radi jednostavnosti, pretpostavlja se da je nabavna cijena automobila stalna tijekom cijeloga razdoblja planiranja te da će po isteku razdoblja planiranja automobil obavezno biti rashodovan. Godišnji neto troškovi održavanja automobila (c_ i) i likvidacijska vrijednost 2 automobila (s_ i) iskazani su kao funkcija starosti automobila:
starost automobila (i) [ god. ]
0
1
2
3
4
-
7
6
2
1
0
Niz (c_ i) _ i \ in \ mathbb N nužno je rastući, tj. povećanjem starosti automobila povećavaju se i godišnji troškovi njegova održavanja. Zbog tog razloga nakon određenog vremena može biti ekonomski isplativije rashodovati do tada korišteni automobil i kupiti novi. S druge je strane niz (s_ i) _ i \ in \ mathbb N nužno padajući, tj. povećanjem starosti automobila smanjuje se njegova likvidacijska vrijednost.
Politika zamjene u ovome je slučaju donošenje odluke treba li zadržati postojeći automobil ili ga rashodovati i kupiti novi automobil. Navedeno odlučivanje na dnevni red dolazi početkom svake pojedine godine. Najjednostavniji primjeri politika zamjene su:
P_ 1) zamjena automobila, tj. rashodovanje do tada korištenoga automobila i kupnja novoga početkom svake pojedine godine (tj. početkom druge, treće, četvrte i pete godine);
P_ 2) zadržavanje postojećeg automobila sve do kraja pete godine.
U razmatranom je primjeru početkom prve godine već donesena odluka o kupnji novog automobila. Stoga se odluke donose početkom svake od sljedeće četiri godine. Budući da je početkom svake od tih godina moguće donijeti točno dvije različite odluke, postoji ukupno 16 međusobno različitih politika zamjene. Stoga je od interesa odrediti najbolju među njima, tj. odrediti optimalnu politiku zamjene.
Optimalna politika zamjene je politika zamjene koja osigurava najmanje ukupne neto troškove uporabe automobila tijekom svih pet godina. U promatranom primjeru to znači ispitati svih 16 međusobno različitih politika zamjene i među njima odrediti najbolju. No, takva je metoda za iole veće vrijednosti n općenito vrlo spora i neučinkovita, pa se stoga nameće problem iznalaženja dovoljno učinkovitih metoda i algoritama za određivanje optimalne politike. U tu se svrhu primjenjuju metode i tehnike dinamičkoga programiranja.
Primjer 1 može se riješiti« klasično », tj. definiranjem odgovarajućih rekurzivnih relacija, ali ovdje će biti riješen svođenjem na problem najkraćega puta u grafu. Matematički model koji će se koristiti je potpuni težinski digraf. Vrhovi toga digrafa predstavljat će početke godina, tj. vrh i označavat će početak godine i. Budući da se korištenje automobila planira u sljedećih n = 5 godina, graf će imati ukupno n 1 = 6 vrhova: 1, 2, 3, 4, 5 i 6. Nadalje, za svaki uređeni par (i, j) takav da je i \ lt j vrhovi i i j bit će spojeni usmjerenim bridom (lukom) čiji je početak u vrhu i, a kraj u vrhu j. Ukupan broj međusobno različitih lukova u tako dobivenom modelu jednak je
\ binom n 1 2 = \ binom 6 2 = 15 \ text.
Preostaje definirati težinu svakog od dobivenih lukova. Budući da treba minimizirati ukupne neto troškove, težina w_ ij luka (i, j) definira se kao:
Radi određivanja najkraćega puta, vrh 1 označi se kao početni vrh, a vrh 6 kao završni vrh. Koristeći se procedurom Find Shortest Path (from Start Vertex to End) određuje se najkraći put između vrhova 1 i 6:
1 2 4 6.
Njegova je težina jednaka 31. Unutrašnji vrhovi dobivenoga najkraćeg puta su 2 i 4, što znači da početkom tih godina treba rashodovati dotad korišteni automobil i zamijeniti ga novim. Prema tome, optimalna politika zamjene glasi:
Usporedno s redovnim studiranjem Ivan je putem Student servisa dobio honorarni posao dostavljača lokalnih besplatnih novina, oglasnoga materijala itd. Za taj mu je posao potreban bicikl koji trenutačno ne posjeduje. Trenutačna cijena novoga bicikla je p = 500 n. j. Novi bicikl može se koristiti najviše 3 godine, a potom ga treba prodati. Godišnji neto trošak održavanja bicikla i likvidacijska vrijednost bicikla, iskazani kao funkcije starosti bicikla, navedeni su u sljedećoj tablici:
400
300
250
Ako Ivan namjerava završiti svoj studij za točno 5 godina i dotad honorarno raditi kao dostavljač, treba odrediti optimalnu politiku zamjene bicikla tijekom razdoblja od 5 godina (pretpostavlja se da je cijena novoga bicikla stalna u cjelokupnom razdoblju planiranja te da će Ivan na kraju razdoblja planiranja obavezno prodati bicikl).
Prije rješavanja zadatka korisno je napraviti jednostavnu analizu kojom se pokušava utvrditi koje je« trajanje vlasništva »najekonomičnije, tj. je li općenito bolje zadržati bicikl 1, 2 ili 3 godine?
Kupi li Ivan bicikl, bude li ga koristio jednu godinu i potom ga prodao, prosječan (zapravo ukupan) godišnji neto trošak iznosit će p c_ 0 - s_ 1 = 500 30 - 400 = 130 n. j.
Ova analiza pokazuje da je najisplativije zadržati bicikl sve tri godine i potom ga prodati, a ako to nije moguće, onda je najisplativije zadržati bicikl točno jednu godinu. Budući da je razdoblje planiranja n = 5 godina, može se procijeniti da će optimalna politika zamjene biti« kombinacija »jednogodišnjeg i trogodišnjeg trajanja vlasništva.
I u ovom se slučaju problem modelira težinskim digrafom, ali taj digraf neće biti potpun. Naime, bicikl se može koristiti najviše tri godine, a to je razdoblje strogo manje od razdoblja planiranja. Stoga neki vrhovi digrafa neće biti spojeni niti jednom spojnicom. Vrhovi digrafa ponovo će označavati početke godina, pa će graf imati ukupno n 1 = 6 vrhova. Vrh i označavat će početak godine i (pritom se pretpostavlja da se kraj pete godine podudara s početkom šeste godine). Budući da se bicikl može koristiti najviše 3 godine, luk (i, j) postoji ako i samo ako vrijedi nejednakost 0 \ lt j - i \ leq 3. Stoga je skup svih lukova grafa jednak E = \ lbrace (1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (2, 5), (3, 4), (3, 5), (4, 5) \ rbrace. Težine pojedinih lukova izračunavaju se kao u primjeru 1:
Dobivena optimalna politika uistinu je kombinacija trajanja vlasništva od jedne, odnosno tri godine, tj. navedenoj optimalnoj politici odgovara rastav 5 = 1 1 3. Vrijedi istaknuti da je ukupan broj različitih optimalnih politika jednak ukupnom broju različitih načina na koji se broj 5 može napisati kao zbroj barem jedne« jedinice »i barem jedne« trojke », a taj je jednak 3. Ti načini su: 1 1 3, 1 3 1, 3 1 1 i svaki od njih generira jednu optimalnu politiku (prvi način generira gore navedenu optimalnu politiku, drugi način generira optimalnu politiku kupnje novoga bicikla u 2. i 5. godini, a treći optimalnu politiku kupnje novoga bicikla u 4. i 5. godini). Sve tri optimalne politike daju iste minimalne ukupne neto troškove u iznosu od 640 n. j.
U prethodnim primjerima razmatrani su slučajevi u kojima je na početku prve godine već bila donesena odluka o kupnji nove opreme (automobila, bicikla), pa su se sve ostale odluke donosile na početku svake od sljedećih n godina (tu uključujemo i završnu odluku o rashodovanju opreme). Međutim, u praksi se nerijetko javljaju slučajevi u kojima na početku prve godine već raspolažemo s opremom starom i godina, čiji je vijek trajanja ukupno n godina, pa treba razmotriti optimalnu politiku zamjene u sljedećih n - i godina. I u takvim se slučajevima problem zamjene opreme može svesti na problem najkraćega puta u digrafu, no, u takvom se grafu pojavljuju negativne težine lukova i višestruki lukovi između dvaju vrhova, pa navedeni problem nije moguće riješiti uz pomoć računalnoga programa Graph Magics. Stoga će se takav problem riješiti« klasično »ilustrirajući tehniku dinamičkoga programiranja koja se ovdje primjenjuje.
Primjer 3
Pretpostavlja se da se na početku prve godine raspolaže vozilom starim dvije godine. Vozilo je potrebno koristiti u sljedeće n = 3 godine, pri čemu se na početku svake godine (uračunavajući i prvu) donosi odluka: zadržati postojeće vozilo još godinu dana ili rashodovati postojeće vozilo i kupiti novo. Kao i prije, godišnji trošak održavanja vozila zadan je tablično kao funkcija starosti automobila:
10
20
40
60
70
Nadalje, cijena novoga vozila u sve je tri godine stalna i iznosi p = 60 n. j. Likvidacijska neto vrijednost automobila starog i godina zadana je funkcijom:
s_ i = s (i) = 25 - 5 \ cdot i \ text, za i = 1,2,3,4,5 \ text.
Treba odrediti optimalnu politiku zamjene automobila u cjelokupnom razdoblju planiranja. Ukupan broj različitih politika zamjene jednak je 2 ^ n = 2 ^ 3 = 8 jer početkom svake godine donosimo jednu od dviju mogućih odluka.
Prvi korak u rješavanju problema je definiranje funkcije optimalne vrijednosti V = V (k, i) s:
Funkcija V je funkcija dviju cjelobrojnih (točnije, prirodnih) varijabli: k i i. Varijabla k naziva se varijabla etape i ona« mjeri »razdoblja (etape) u kojima se donosi točno jedna odluka. U ovom slučaju varijabla etape poprima vrijednosti iz skupa \ lbrace 1, 2, 3, 4 \ rbrace jer će se početkom 1., 2., 3. i 4. godine donositi odluka o zadržavanju ili rashodovanju vozila. Treba primijetiti da će početkom (n 1) te, tj. 4. godine biti donesena odluka o rashodovanju vozila jer će završiti planirano razdoblje u kojemu se želi koristiti vozilo. Varijabla i naziva se varijabla stanja i ona« mjeri »starost vozila na početku godine k. Ta će varijabla poprimati vrijednosti iz skupa \ lbrace 1, 2, 3, 4, 5 \ rbrace jer najveća moguća starost vozila iznosi i_ \ max = 2 3 = 5 godina 3.
Iz postavke navedenoga primjera slijedi da treba izračunati vrijednost V (1, 2) jer se na početku prve godine (k = 1) raspolaže vozilom starosti i = 2 godine. Navedena se vrijednost izračunava tako da se najprije definira dvoindeksna rekurzivna relacija koju zadovoljavaju vrijednosti V (k, i), a potom početni uvjeti koji omogućuju računanje konkretnih vrijednosti te funkcije.
Spomenuta dvoindeksna rekurzivna relacija dobiva se na sljedeći način: Pretpostavimo da se na početku godine k koristi vozilo staro i godina. Moguće su točno dvije alternative: A_ 1 = zadržati vozilo još godinu dana i A_ 2 = rashodovati vozilo i zamijeniti ga novim vozilom.
Ako se donese odluka A_ 1, tj. odluči li se zadržati vozilo i koristiti se njime u cijeloj godini k (do početka godine k 1), ukupni neto trošak u godini k koji proizlazi iz takve odluke tvori isključivo neto trošak održavanja automobila starog i godina. Taj je trošak jednak c_ i. Sljedeća etapa u kojoj se donosi odluka je početak (k 1) godine, a u tom trenutku na raspolaganju će biti vozilo starosti i 1 godina. Najmanji ukupni neto troškovi od početka (k 1) godine do kraja razdoblja planiranja, prema definiciji funkcije V, iznose V (k 1, i 1). Prema tome, ukupni neto troškovi nastali kao posljedica izbora alternative A_ 1 na početku godine k iznose c_ i V (k 1, i 1).
Navedena jednakost je tražena dvoindeksna rekurzivna relacija uz pomoć koje se računaju vrijednosti funkcije V. Preostaje zadati početne uvjete, tj. neke vrijednosti funkcije V uz pomoć kojih se može izračunati svaka od preostalih vrijednosti te funkcije.
Da bi se mogli zadati početni uvjeti, razmatra se odluka koja se donosi na kraju razdoblja planiranja, odnosno početkom četvrte godine. Pripadna vrijednost varijable etape je k = 4, pa se zapravo zadaju vrijednosti V (4, i). Na kraju razdoblja planiranja moguća je točno jedna odluka: rashodovati dotad korišteno vozilo. To vozilo ne može biti novo, tj. ne može biti i_ \ min = 0, pa je najmanja moguća starost vozila jednaka i = 1. Najveća moguća starost vozila jest i = 5, pa se računaju vrijednosti V (4, i) za i = 1, 2, 3, 4, 5. Rezultat odluke rashodovati dotad korišteno vozilo je prihod jednak likvidacijskoj vrijednosti vozila na početku četvrte godine. Budući da minimiziramo ukupne troškove, prihod se formalno evidentira kao negativni trošak:
Zadavanjem navedenih vrijednosti moguće je izračunati svaku od preostalih vrijednosti funkcije V na temelju prethodno navedene rekurzivne relacije. Najprije se razmatra početak treće godine, odnosno etapa k = 3. Najveća moguća starost vozila u toj etapi je i = 4, pa se računaju vrijednosti V (3, i), za i = 1, 2, 3, 4:
Vrijednost V (1, 2) jednaka je 105, pa slijedi da ukupni minimalni troškovi korištenja vozila u razdoblju planiranja iznose 105 n. j. Vrijedi istaknuti da se ta vrijednost postiže i izborom alternative A_ 1 i izborom alternative A_ 2, što znači da postoje ukupno dvije različite optimalne politike zamjene. Te se politike mogu lako« očitati »iz gore provedenih izračuna na sljedeći način:
1. optimalna politika zamjene
\ bullet
početak 1. godine: zadržati vozilo staro dvije godine;
\ bullet
U prethodnim su se primjerima nastojali minimizirati ukupni troškovi nastali korištenjem opreme. No, u praksi se vrlo često javljaju i problemi maksimizacije ukupne dobiti nastale korištenjem neke opreme. Postupak rješavanja takvih problema bit će ilustriran na sljedećim primjerima.
Primjer 4
Za opremu nekoga proizvodnog pogona koja osigurava nesmetan i neprekidan proces proizvodnje zadane su nabavna cijena p = 120 n. j. i funkcija neto dobiti, nastale korištenjem opreme (d). Nakon određenoga vremena korištenja opremu nije moguće prodati, pa početkom svake godine treba donijeti odluku o zamjeni ili zadržavanju dotadašnje opreme. Godišnja neto dobit od korištenja opreme zadana je kao funkcija starosti opreme (i):
Budući da se na početku prve godine raspolaže opremom starom 3 godine, treba izračunati vrijednost V (1, 3). U tu svrhu najprije se određuje odgovarajuća dvoindeksna rekurzivna relacija i zadaju početni uvjeti.
Za određivanje rekurzivne relacije provodi se sljedeće zaključivanje: Pretpostavlja se da se na početku godine k koristi oprema stara i godina. Odluka na početku te godine je točno jedna od alternativa A_ 1 = zadržati opremu još godinu dana i A_ 2 = zamijeniti dotad korištenu opremu.
Preostaje zadati početne uvjete. U tu se svrhu razmatra odluka koja se donosi početkom posljednje godine razdoblja planiranja, odnosno početkom osme godine. Pripadna vrijednost varijable etape je k = 8, pa se zapravo zadaju vrijednosti V (8, i). Najmanja moguća vrijednost varijable stanja je i_ \ min = 0 i postiže se ako se početkom 8. godine donese odluka o kupnji nove opreme. Najveća moguća vrijednost varijable stanja jednaka je i_ \ max = 3 7 = 10 i postiže se ako se oprema stara 3 godine zadrži tijekom svih osam godina. Budući da, prema definiciji funkcije V, za svaki k = 9, 10, 11, \ ldots i svaki i \ in \ mathbb N vrijedi jednakost:
izraz za izračunavanje vrijednosti V (8, i) može se transformirati ovako:
(što znači da ako se početkom sedme godine raspolaže opremom starom barem 3 godine, svakako se isplati kupiti novu). Analogno se postupa u svakoj od sljedećih šest faza. Dobivaju se sljedeće vrijednosti:
V (1,0) = 600, \ V (1,1) = 540, \ V (1,2) = 500, \ V (1,3) = 480 \ text.
Prema tome, tražena maksimalna ukupna neto dobit u cjelokupnom razdoblju planiranja iznosi 480 n. j. Preostaje odrediti optimalnu politiku zamjene opreme, odnosno« očitati »slijed odluka. Vrijednost V (1, 3) = 480 postiže se neovisno o izboru alternative (A_ 1 ili A_ 2). Stoga se dobivaju sljedeće optimalne politike:
1. optimalna politika
\ bullet
Ako se unaprijed donese odluka da se na početku prve godine zamjenjuje dotad korištena oprema, postupak donošenja optimalne politike zamjene može se svesti na određivanje kritičnoga puta u težinskom digrafu. Navedeno je modeliranje moguće ako i samo ako je težina svakoga luka (i, j) za i \ lt j pozitivan realan broj 4. Postupak se prikazuje na sljedećem primjeru.
Primjer 5
Treba riješiti primjer 4 uz dodatan uvjet da se početkom prve godine obavezno nabavlja nova oprema. Odmah se može uočiti da će rješenje ovoga primjera biti 3. optimalna politika iz primjera 4.
Matematički model je potpuni težinski digraf čiji vrhovi označuju početke godina. Budući da je razdoblje planiranja dugo n = 8 godina, digraf će imati ukupno n 1 = 8 1 = 9 vrhova: 1, 2, 3, 4, 5, 6, 7, 8, 9 (vrh 9 interpretiramo kao kraj 8. godine, odnosno kraj razdoblja planiranja). Vrhovi i i j bit će spojeni lukom od i prema j ako i samo ako je i \ lt j, pa će graf imati ukupno \ binom 9 2 = 36 različitih lukova. Preostaje zadati težinu svakoga luka:
Primjenom procedure Critical Path implementirane u istom računalnom programu određuje se kritični put u tom digrafu:
1 5 9.
Njegova je težina 480 i ona je jednaka optimalnoj ukupnoj neto dobiti. Jedini unutrašnji vrh u kritičnom putu je vrh 5, pa slijedi da početkom 5. godine treba zamijeniti dotadašnju opremu. Kad se tomu doda unaprijed postavljeni uvjet da se početkom prve godine obavezno kupuje nova oprema, dobiva se 3. optimalna politika dobivena u rješenju primjera 4.
Zaključno se može istaknuti kako se još neki tipovi logističkih problema također mogu riješiti uz pomoć modela i algoritama teorije grafova (vidjeti [ 4 ]).
U ovom radu bavimo se logistikom i teorijom grafova. Opisujemo vezu logističkih problema iz svakidašnjeg života i teorije grafova.
1 Uvod
Riječ logistika često se javlja u suvremenim masovnim medijima, npr. novinama i časopisima. Što je logistika? Logistika je upravljanje protokom roba, informacija i drugih resursa, uključujući energiju i ljude, između točke izvora (ishodišta) i točke konzumacije (potrošnje) s ciljem udovoljavanja zahtjevima potrošača (često, i izvorno, vojnim organizacijama). Logistika uključuje integraciju informacija, transporta, popisivanja, skladištenja, baratanja i pakiranja.
Postoji mnogo logističkih problema u svakodnevnom životu. Na primjer: dostava pošte, skupljanje otpada, čišćenje snijega, posipanje ulica solju zimi, čišćenje ulica, održavanje puteva, određivanje ruta školskih autobusa i mnogi drugi. Održavanje putova zimi zahtijeva mnogo složenog strateškog i operativnog planiranja. Glavni problemi uključuju pozicioniranje skladišta, označivanje sektora, određivanje ruta servisnih vozila, određivanje voznog reda. Čišćenje snijega i posipanje puteva zimi vrlo je bitna a i skupa usluga. Ako ceste nisu očišćene na vrijeme, ili zaleđeni putevi nisu posuti solju, mnogo sudionika u prometu izvrgnuto je većoj pogibelji, a o nezadovoljstvu građana da ne govorimo. Optimiranje čišćenja snijega i posipanja ulica solju treba izvesti pazeći na dva aspekta: sigurnost i ekonomičnost. Sigurnosni aspekti zahtijevaju da najosjetljivije točke mreže (ona mjesta koja se lede prva) budu očišćena prva. Ekonomičnost zahtijeva da ruta čišćenja bude najjeftinija. Svi ovi problemi mogu biti riješeni koristimo li algoritme teorije grafova.
U matematici i računarstvu pod teorijom grafova smatra se proučavanje grafova, matematičkih struktura korištenih da bi se predstavile relacije koje uključuju dva elementa određene kolekcije. Neformalno govoreći, graf je skup objekata zvanih vrhovi, točke ili čvorovi povezanih vezama zvanima bridovi ili linije. Ako je dan skup čvorova i drugi skup objekata zvanih bridovi, graf je definiran kao odnos između tih skupova: svaki brid spaja par čvorova. Grafovi se prikazuju crtanjem točaka za svaki vrh i povlačenjem luka između dvaju vrhova, ako su oni povezani bridom. Ako je graf usmjeren, smjer se navodi crtanjem strelice.
Svakom bridu možemo pridružiti realan broj, što znači da je graf proširen težinskom funkcijom. U slučaju kada graf predstavlja mrežu cesta, težinska funkcija je npr. duljina svakog puta. Takav se graf zove težinski graf.
Teorija grafova ima široke primjene u različitim disciplinama. U teoriji grafova razmatramo strukure s pomoću kojih možemo modelirati mnogo problema iz svakidašnjeg života. Začetak teorije grafova možemo povezati s jednim problemom iz realnog života, koji bi se u današnje vrijeme nazvao logističkim problemom. Taj problem postavio je i riješio 1736. eminentni švicarski matematičar Leonhard Euler. Nekoliko godina poslije Euler je izdao članak Solutio problematis ad geometriam situs pertinentis u časopisu Commentarii academiae scientiarum Petropolitanae, u kojem je formulirao i riješio problem Sedam königsberških mostova. Ovaj rad, objavljen 1741., danas se smatra prvim radom u matematičkoj disciplini teoriji grafova.
2 Neke definicije
Graf G matematička je struktura koja se koristi za opisivanje relacija između dvaju objekata iz određene kolekcije. U ovom kontekstu graf se odnosi na neprazni skup vrhova i kolekciju bridova koji povezuju par vrhova. Skup vrhova obično se označava s V (G), a skup bridova s E (G). Bridovi mogu biti usmjereni ili ne, ovisno o primjeru. Graf kojemu su svi bridovi usmjereni zovemo usmjerni graf, u suprotnom, zovemo ga neusmjereni. U pravom grafu, za koji inicijalno pretpostavljamo da je neusmjeren, linija od točke u do točke v identificira se s linijom od točke v do točke u. U digrafu (skraćeno za usmjereni graf), ta dva smjera smatraju se različitim lukovima, odnosno bridovima. Ako graf G nije usmjeren, tada su dva vrha pridružena jednom bridu međusobno ravnopravna. U usmjerenom grafu brid može biti usmjeren od jednog vrha orema drugome. Slike 1 i 2 primjeri su usmjerenih grafova.
Slika 1: Usmjeren graf sa šest vrhova i sedam bridova.
Slika 2: Neusmjeren i usmjeren graf.
Brid koji počinje i završava u istom vrhu zove se petlja. Brid je višestruk ako postoji drugi brid kojemu odgovaraju isti vrhovi (kao početni i krajnji vrh). (Slika 3).
Slika 3: Višestruki brid između vrhova u i v.
Graf se naziva jednostavnim ako je neusmjeren, nema petlji i između bilo koja dva vrha nema više od jednog brida. U jednostavnom grafu svaki se brid može identificirati s parom različitih vrhova. Brid povezuje dva vrha. Ta dva vrha nazivaju se incidentnima tom bridu, odnosno brid je incidentan tim dvama vrhovima. Stupanj vrha v u grafu G je broj bridova koji su incidentni s v, pri čemu se petlje broje dva puta. Slika 4 pokazuje da su bridovi vu, vt, vw incidentni vrhu v. Prema tome, stupanj vrha v je 3.
Ako je skup bridova E (G) konačan, tada je ukupna suma stupnjeva svih bridova jednaka dvostrukom broju bridova. Vrhovi u i v su susjedni ako postoji brid između njih.
Neka je G graf sa skupom vrhova V (G) i skupom bridova E (G) i neka je G ' graf sa skupom vrhova V (G ') i skupom bridova E (G '). Tada je G ' podgraf grafa G ako je V (G ') podskup od V (G) i E (G ') podskup od E (G). Podgraf G ' je razapinjući podgraf grafa G ako ima isti skup vrhova kao i G. Na Slici 5 vidimo graf (na lijevoj strani) i njegov podgraf (na desnoj strani).
Slika 5: Graf i podgraf.
3 Šetnja i duljina u grafu
Šetnja je alternirajući niz vrhova i bridova, koji počinje i završava vrhom, u kojem je svaki vrh incidentan bridu koji mu prethodi i bridu koji mu slijedi u tom nizu, a vrh koji prethodi bridu i vrh koji slijedi taj brid krajnji su vrhovi tog brida. Niz od i bridova v_ 0 v_ 1, v_ 1 v_ 2, \ ldots, v_ i-1 v_ i u grafu G šetnja je od vrha v_ 0 do vrha v_ i duljine i u G. Šetnju obično označavamo s v_ 0 v_ 1 v_ 1 v_ 2 \ ldots v_ i-1 v_ i. Šetnja je zatvorena ako su joj prvi i zadnji vrh jedanki, a otvorena ako su različiti. Ako u otvorenoj šetnji nema ponavljanja vrhova (pa prema tome ni bridova), zovemo je put. Slika 6 daje primjer puta.
Slika 6: Šetnja utzw je put između u i w.
Staza je šetnja u kojoj su svi bridovi međusobno različiti. Zatvorena staza zove se tura. Staza je Eulerova ako se u njoj pojavljuju svi bridovi u grafu, i to točno jedanput. Udaljenost između vrhova v_ 0 i v_ i u grafu G je duljina najkraćeg puta među njima, tj. broj bridova kojima se on koristi. Udaljenost između vrhova v_ 0 i v_ i označavamo s d_ G (u_ 0, v_ i) (Slika 7).
Za graf kažemo da je povezan ako postoji put između bilo koja dva vrha u grafu. U suprotnom, graf zovemo nepovezanim. Slika 8 pokazuje nam primjer povezanog i nepovezanog grafa.
Slika 8: Povezani i nepovezani graf.
Graf se naziva stablom ako su svaka dva vrha u njemu povezana točno jednim putem. Ciklus je zatvorena staza u kojoj su svi unutarnji vrhovi međusobno različiti. Svaki povezani graf bez ciklusa je stablo.
Neka je G povezan, neusmjeren graf. Razapinjuće stablo u tom grafu je podgraf koji je stablo i razapinje taj graf. Jedan graf može imati mnogo razapinjućih stabala. U težinskom grafu minimalnim razapinjućim stablom zovemo ono stablo čija je težina (tj. suma težina njegovih bridova) manja ili jednaka težini svakog drugog razapinjućeg stabla (Slika 9).
Slika 9: Graf i razapinjuće stablo.
4 Problem Sedam königsberških mostova
U ovoj sekciji predstavljamo problem Sedam königsberških mostova. Grad Königsberg (Kaliningrad, adminsirativni dio Rusije, ali zemljopisno između Poljske i Litve) leži na obalama rijeke Pregel. Kao što se vidi na Slici 10, na rijeci se nalaze dva veća otoka koja su međusobno i s obalama povezani s pomoću sedam mostova. Euler je postavio sljedeći problem:
Postoji li šetnja preko svih sedam mostova koji povezuju dva otoka na rijeci Pregel s ostakom grada Königsberga takva da se svaki most prijeđe točno jedanput?
Kao što je Euler pokazao u članku, takva šetnja ne postoji.
Dolazimo do pitanja: zašto Eulerova šetnja? Put koji prolazi kroz svaku spojnicu (brid) samo jednom zove se Eulerova šetnja jer je upravo Euler razriješio pitanje
königsberških mostova, koje je sadržavalo zahtjev da se svaki brid prijeđe samo jednom.
Na Slici 10 kako je Königsberg izgledao u to vrijeme. Kao što vidimo, četiri dijela grada (sjeverni, južni i dva otoka) bila su međusobno povezana putem sedam mostova. Manji otok s po dva je mosta povezan sa sjevernim i s južnim dijelom grada. Veći otok s po jednim je mostom povezan sa sjevernim s južnim dijelom grada, a postojao je i jedan most koji je povezivao dva otoka.
Slika 10: Četiri dijela grada i sedam mostova u Königsbergu.
Dok je proučavao problem, Euler je došao na genijalnu ideju da različite dijelove grada označi vrhovima, a mostove među njima bridovima. Na taj je način konstruirao graf s četiri vrha i sedam bridova, kao što možemo vidjeti na Slici 11.
Slika 11: Model Köningsberga i mostova predočen u teoriji grafova.
Na taj je način modelirao Königsberg i njegove mostove koristeći se teorijom grafova (u to vrijeme pojam još nije postojao). Detaljno proučavajući taj problem, Euler je došao do zaključka da rješenje ne postoji. Nekoliko stoljeća poslije znamo da se zatvorena Eulerova šetnja može naći samo u grafovima u kojima je stupanj svakog vrha paran. Prema tome se grafovi u kojima su svi vrhovi parnog stupnja nazivaju Eulerovim.
Kao što smo spomenuli na početku, teorija grafova vrlo je primjeren alat za rješavanje logističkih problema. Izdvojimo neke od problema koji su riješeni uz pomoć teorije grafova i koji su primjenjivi na modeliranje nekih logističkih problema iz svakodnevnog života:
Problem kineskog poštara primjer je u kojem pokušavamo naći šetnju kojom prolazimo kroz svaki brid na grafu samo jednom, i to učiniti na najkraći mogući način, koristeći se usmjerenim ili neusmjerenim grafom. Za bolje razumijevanje možemo zamisliti poštara koji hoda ulicama (u našem slučaju po grafu) i koji želi uručiti poštu u svaku kuću (vrhovi našeg grafa) u najkraćem veremenu i tada se vratiti u poštu (polaznu točku). Poštar nastoji uštedjeti vrijeme, trud i novac izvršavajući svoj zadatak tako da upotrijebi najkraću rutu.
Problem trgovačkog putnika na je prvi pogled vrlo sličan problemu kineskog poštara. Bavi se slučajem u kojem tražimo šetnju u usmjerenom ili neusmjerenom grafu tako da prođemo svaki vrh u grafu barem jednom i vratimo se u početni vrh na najkraći mogući način. Možemo zamisliti da su pri tome i zadane udaljenosti među vrhovima, pa tražimo da je i ukupna prijeđena udaljenost najmanja.
U potrazi za najkraćim putem želimo naći najkraći put (npr. u težinskom grafu) između nekih dvaju vrhova.
Konačno, možemo reći da se rješavanje gore spomenutih problema vrlo lijepo uklapa u rješavanje logističkih problema iz svakidašnjeg života. Naprimjer:
\ bullet
Putevi ralica za snijeg mogu biti modelirani uz pomoć teorije grafova. Za tu priliku koristimo neku varijaciju problema kineskog poštara
\ bullet
Konstrukcija kabelske ili električne mreže, cjevovoda za vodovod i sl., može biti riješena potragom za minimalnim razapinjućim stablom
\ bullet
Rute i redoslijed transporta robe od skladišta do trgovina mogu se modelirati preko problema trgovačkog putnika
\ bullet
Planiranje fiksne telefonske mreže koja povezuje nekoliko različitih objekata modelirano je preko potrage za minimalnim razapinjućim stablom
Potraga za najkraćim putem vrlo je raširena u svakodnevnom životu. Popularna GPS tehnologija može se vidjeti u mnogim motornim vozilima kao metoda za pronalaženje pravog puta od jedne do druge točke na zemljopisnoj karti.
Rezultati teorije grafova vrlo su korisni ljudima koji rješavaju logističke probleme. Zapravo, možemo reći da su ti rezultati esencijalni za njihovo rješavanje. Prema jednoj od mnogih definicija, logistički zadatak je, među ostalim, osigurati da su zadovoljavajuće količine robe dostupne primateljima i da u pravo vrijeme budu na pravom mjestu. Postoji mnogo svakodnevnih logističkih problema (vojno-logističkih, upravljačkih, poslovno-logističkih, proizvodno-logističkih i ostalih) koji mogu biti riješeni primjenom teorije grafova. Naprimjer, praktična primjena Problema kineskog poštara je planiranje ruta autobusnog javnog prijevoza. Da bi uštedjela na gorivu, autobusna kompanija može modelirati autobusnu stanicu kao vrh i cestu kao brid u ruti autobusa, te koristeći se teorijom grafova pronaći optimalnu rutu koja može udovoljiti cilju minimiziranja potrošnje goriva, ali uz uvjet da se svaka zadana cesta prijeđe barem jednom. Ostale primjene uključuju skupljanje smeća, čišćenje ulica, čišćenje snijega, šišanje trave oko autoputa, ispitivanje dalekovoda, određivanje ruta školskih autobusa itd.
